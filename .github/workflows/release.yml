name: Release Version

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'The Version of the Release (e.g. 0.1.0)'
        required: false
        default: ''

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0
    - name: Set up Node.js
      uses: actions/setup-node@v2.3.1
      with:
        node-version: 14.x
        registry-url: "https://npm.pkg.github.com"
        scope: "@dipa-projekt"
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
        check-latest: true
    - name: Cache local Maven repository
      uses: actions/cache@v2.1.6
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Cache Frontend Build Node Modules
      uses: actions/cache@v2.1.6
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Configure Git user
      run: |
        git config user.email "actions@dipa.online"
        git config user.name "DiPA GitHub Actions"
    - name: Release with Maven
      run: mvn -s .mvn/release.settings.xml -B -DreleaseVersion=${{ github.event.inputs.release_version }} gitflow:release --file pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.GIT_HUB_PACKAGES_ACCESS_TOKEN }}
        DOCKER_REGISTRY_USERNAME: dipa
        DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Deployment to Kubernetes
      run: |
        git checkout -f main
        mkdir -p ~/.ssh
        echo -e "${{ secrets.DEPLOYMENT_SSH_KEY }}" > ~/.ssh/id_rsa
        echo -e "${{ secrets.DEPLOYMENT_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
        chmod 600 ~/.ssh/id_rsa
        mvn -s .mvn/release.settings.xml -P production-ci -B -DskipTests clean install --file pom.xml
        scp server/target/deployment/*.yaml dipa-deployment@dipa.rz-housing.tu-clausthal.de:deployment/main
        ssh dipa-deployment@dipa.rz-housing.tu-clausthal.de kubectl apply -k deployment/main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.GIT_HUB_PACKAGES_ACCESS_TOKEN }}
        DOCKER_REGISTRY_USERNAME: dipa
        DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
