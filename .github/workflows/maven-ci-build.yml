# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11.0.2
      uses: actions/setup-java@v1
      with:
        java-version: '11.0.2'
        architecture: x64
        server-id: mvp.dipa.online
        server-username: DOCKER_REGISTRY_USERNAME
        server-password: DOCKER_REGISTRY_TOKEN
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Cache Frontend Build Node Modules
      uses: actions/cache@v2
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Build with Maven
      run: mvn -P develop-ci -B clean install dockerfile:push --file pom.xml
      env:
        DOCKER_REGISTRY_USERNAME: dipa
        DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Deployment to Kubernetes
      if: {{ github.ref == 'ref/head/develop' }}
      run: |
        mkdir -p ~/.ssh
        echo -e "${{ secrets.DEPLOYMENT_SSH_KEY }}" > ~/.ssh/id_rsa
        echo -e "${{ secrets.DEPLOYMENT_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
        chmod 600 ~/.ssh/id_rsa
        scp server/target/deployment/*.yaml dipa-deployment@dipa.rz-housing.tu-clausthal.de:deployment/develop
        ssh dipa-deployment@dipa.rz-housing.tu-clausthal.de kubectl apply -k deployment/develop
